policy_module(volt, 1.100.1)

########################################
#
# Declarations
#

type volt_t;
type volt_exec_t;
init_daemon_domain(volt_t, volt_exec_t)

permissive volt_t;

type volt_initrc_exec_t;
init_script_file(volt_initrc_exec_t)

type volt_conf_t;
files_type(volt_conf_t)

type volt_var_lib_t;
files_type(volt_var_lib_t)

type volt_var_run_t;
files_type(volt_var_run_t)

type volt_port_t;
corenet_port(volt_port_t)

########################################
#
# volt local policy
#
allow volt_t self:process { fork };

allow volt_t self:fifo_file rw_fifo_file_perms;
allow volt_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(volt_t, volt_conf_t, volt_conf_t)
manage_files_pattern(volt_t, volt_conf_t, volt_conf_t)

manage_dirs_pattern(volt_t, volt_var_lib_t, volt_var_lib_t)
manage_files_pattern(volt_t, volt_var_lib_t, volt_var_lib_t)
files_var_lib_filetrans(volt_t, volt_var_lib_t, { dir file })

manage_dirs_pattern(volt_t, volt_var_run_t, volt_var_run_t)
manage_files_pattern(volt_t, volt_var_run_t, volt_var_run_t)

sysnet_dns_name_resolve(volt_t)
corenet_all_recvfrom_unlabeled(volt_t)

allow volt_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(volt_t)
corenet_tcp_sendrecv_generic_node(volt_t)
corenet_tcp_sendrecv_all_ports(volt_t)
corenet_tcp_bind_generic_node(volt_t)

gen_require(`
    type volt_port_t;
')
allow volt_t volt_port_t:tcp_socket name_bind;

gen_require(`
    type volt_port_t;
')
allow volt_t volt_port_t:tcp_socket name_connect;

domain_use_interactive_fds(volt_t)

files_read_etc_files(volt_t)

miscfiles_read_localization(volt_t)

sysnet_dns_name_resolve(volt_t)

allow volt_t volt_exec_t:file execute_no_trans;
allow volt_t self:process setsched;
corecmd_exec_ls(volt_t)
corenet_tcp_connect_http_port(volt_t)
dev_read_urand(volt_t)
fs_getattr_xattr_fs(volt_t)
kernel_read_system_state(volt_t)
